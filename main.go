package main

//import "os"
import "fmt"
import "github.com/DenBeke/CodingTheory/playfair"
import "runtime"
import "github.com/davecheney/profile"

func main() {
	
	defer profile.Start(profile.CPUProfile).Stop()
	
	runtime.GOMAXPROCS(runtime.NumCPU())
	
	/*
		if len(os.Args) == 1 {
			println("Usage:", os.Args[0], "input.json")
			return
		}

		enigma_config, err := enigma.ReadConfig(os.Args[1])

		if err != nil {
			println("Error:", err)

		}

		fmt.Println(enigma_config)
		e := enigma_config.CreateEnigma()
		encoded := e.Encode("TEST", "AAA")
		fmt.Printf("%q \n", encoded)
		fmt.Printf("Finished encoding \n")
	*/

	// run the Hillclimb algo to crack the playfair cipherText
	ret := playfair.HillClimbCrack("RUBQVPLPSZWCDRRQDTTOTFGBFRDASXRFRAISIBPCAWTWORPVQHWNOQBUABKXHVRDQBDSWAOGKRTOESQSCMOBGICNIERAMTSZOSIZABISSFIRTDFRESWKPDOBFWKRPCSFXSOBFWPRPSWAQSIRTDFRESWKPDOBGRPSAIFHBURFSDHQVPRGDTSQFHTOBICNBKVPIGFZECBKIUKFDIOSIZRQGTHOOBQBDSWAABPBDIHPOGPMKBGMIFIDOBRBYNFHOSAITZHGQGFXKIPCFRTPVSIFGFVFBUIOHQYXTRCSVAVIRTSOOBZSBNPTCSABPVKMFYKBDXKBOIFWXIQTISIGSQOSARRYQFYFDERKDIOFISTEOROSRODRRQDTTOYEZBRFXKAIETSCDBQBRAHFIAIAQNDAQCVSIFRTOSIOSEOFRTROFIPCRPQGKCFZIAZBACMNBZAIGFWKYCRKZBACMNBZAIFRTPOSOGPMKBGMAVDTOTFXISQBFRPVPHOBURMGSZLCFTDXOGQNRZFZPMTAPCOSIQRDFXIAFHFZAWPRZBSCABFRPRKSRPTDIOSZAIFHOFISTEORCSIFOBIWIEPTYWQHWFAVSXFMGTZROSRPNUAQQSVRIOIDAIVSIFGTZRLPSZBRFZDIOSAZPRZBSCABPCSFXCSZAQQSXRSXOBIAPTPDOBWKBXAIORGSGBSAHGRKCXOBIARTTDQGRPYGTPOSAZPRZBSCBOBUABRADEPWPRQCRKPTHTSZFBOSIKIXRQIGRAHFIAOSRQVSIFRTOSRQIFWAOGHOBDRZBPVPTDBZAIGSGBOFRKRQGDRKZRQGRBYNRPDTGBIAGRPSRIABPFSBFZMOTRPQFMTRNCYBGIQTTWTRHVAEPQBIHIKYRKFITORDQRXSRGSLHQGQEATWFWDZQOTORKCRAITOFTHGOGHOOBORQHQCTORKPTQCKZRODTSQTWTFGBYIDFOBORRKCRAIHCFKORZIYBTFHBETWFOFWFRFOSIZABISSFIRTDRPDOOBFWQSINAIFBNTRFIEPTYWQHWFRFIFSZAIFHOFISTEORTFPNDFBDRZFBOIZBISFBHDFKRAXRPVPHBQVPRFQHQCEYFETOSBIZBOWKCIIGRKYTFZISMADSOBCEIZAQLTBPFTTQOBIBIETOFOQBRPTBHRTZFQSQOSBOABZBWCURFRHVIOTQXFHFSRBIPDZSQGZTYIECVYRQOTHFIRBQEAXBQCOSIFIDOBZIBIOSURFRESWKCTLTAIAIIFOBISFBKRFBDXKBOITASCOSAIABPBEOPDFBOIMNTXORTFHOOBGHZTWRAIRGFAORMIDFOBZIBIOSGSDBQCRASXIZRQOSROWKRKPDOBGHZTPSOBZIBIOSTWTSIYSZSQOSBGTZSQURFRNVFKCSFZPCVSRDSVFZPMRASIZASQKMATOSIZABISSVRFWTLTAIRDBKATOSIZABISTVFBMIIZRQFYKBDPRTPFOBTSIYSZZXFZPMFBZBRAZIQRQHQCIFIGRKGIPVPBXDRDBKWKQBTWTOOBZIMNTXORBKURCFSGWDWAWIIGIFIFBDRZOBPSOBFWWRRFPTIADSKMWKGIISOBGRPSAIFHOSIGRTNFRGSQPDOBCEIZAQFNQRUSESDHOBEISIBUBQTOFBDIOSRQSEOSTOBIIKIXABIAMPSZAIRPOSROUKVSRQXBRZIGRPOSROFZOSOSRKTDPTPTLCSERQSEOSAIKMIADESQTWTRWNIOOBQSISSTFIBNEATFZBISOBQSISTLHQAEFIXIQIBITOHEIGEIRGHPKFEHZBRKHEORBWAIIFIDOBQSISTLHQARXFIDFTHGOGQRQHZTPAQCSAHGOSIZOZAFOFIEFIXIQIBITOHQEAAXTOIFIDOBSFIEEGKSESDHOBPTTUOAIAWNAEPSOBIKIXBIRQDXFTTDETQSHOOBQSISSTFIIEQRYMXDRKGYIAZIGRBIRTOFHPIZBZRQKZFOIGRKRODTYBOIOSIFIDOBPTTORKGRBIFZPCOSIZABISSVRFHFWAFVPCIAPDSFWFRKCTFIPTBEDTCWFOLPSZQRUIDSKMVSIFQBQCOSRFFIPTVYURHRXFTDYBMFBUARIZRQBRFZDISXFSWKCIIGKFICCRTBMSZSVKGCFUABIETOFOQBORTOBDIFABEHXFIDXRGROSRGWAWIRQHPKFDWGRXDIGTAYZIAOSOQIAZINFBZRQFBYIOSEIYIECVYRQDIOSIFIDOBZIBIOSYVTORAESWKYTSEVSGANHIGGOTFQRTASCOTIZIOOBFRBPTFYFTSTXGSDBQCHZAIOSBOSEEXSQRKGTPNMKIFAIORZIOSBOVKVPBIRTOFHPIOSFZYSOIDOBZIBIOSURTWTOIFETKRACRKPDFBDIOSROWKOSBGTZSQOSIQKBQROTRKPDOBTOBIHCHZIGRPDRSNVKBISEREOTBRFZDIOSIZABISTVOBRAPBBZIGOSRTRAYRWFBOAOBQOHSECMTORDBKIARFSQTOFBDIOSIZABISSVRFOSRGRQOIESHOOBWKBXAIORRKPDFBSDEIYWKBBCFOETWRRFOSBGFTDXAIOADSIDTBTRGIRURFBQBRSEIFIGAMXDHQBGDAPSOBORGSPCGRPSWAKFPTPSFEGSDLQBOIGSHCHQGQRDBKGHGIPHOBZIBIOSTOTZTGIFIDOBGRPSAIFWIWESWKGIMIGAEDSOTNOBIATOFBSDBIWIEAPDOBGHZTPSOBFWPSOBTOBIFRPCOSAOBXIQKBQROTLPSZKRDIOSIOBDBGAIYWACZBKWHCBITRXKTDAIRKCTIFWAPW")
	fmt.Printf("Solution Square: %v", ret)
}
